'''

_____________________ ФУНКЦИИ ________________________

    Функции пишутся до вызова

    синтаксис:
        def название_функции(параметры):
            блок кода

        название_функции(аргументы) - вызов ф-ии



    Пример:
      def draw_box(height, width):    # функция принимает два параметра
            for i in range(height):
                print('*' * width)


        draw_box(10, 15)  - вызов ф-ии



    Иногда, при объявлении функции требуется сделать своего рода заглушку, чтобы функция ничего не выполняла.
    Тогда мы используем ключевое слово pass:
        def do_nothing():
            pass






_____________________ ЛОКАЛЬНЫЕ И ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ ________________________

Глобальные переменные лучше не использовать по возможности. Вместо них - лучше локальные.

Если нужно, чтобы инструкция внутри функции присваивала значение глобальной переменной, используем ключевое слово global


        def print_texas():
            global birds                                             //ключевое слово global
            birds = 5000
            print('В Техасе обитает', birds, 'птиц.')

        def print_california():
            print('В Калифорнии обитает', birds, 'птиц.')

        print_texas()                   // В Техасе обитает 5000 птиц.
        print_california()              // В Калифорнии обитает 5000 птиц.







_____________________ ФУНКЦИЯ С ВОЗВРАТОМ ЗНАЧЕНИЯ ________________________


 синтаксис:
        def название_функции(параметры):
            блок кода
            return выражение

        переменная = название_функции(аргументы)






    Функции с возвратом нескольких значений

    def get_powers(num):
        return num**2, num**3, num**4


    a, b, c = get_powers(2)



'''